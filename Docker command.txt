#docker ps --filter "name=novacdn_frontend" --format "{{.Names}}" --- To see the list of running frontend containers by name.

Output: 

dannyrosky@Samson:/mnt/c/Users/Administrator/Desktop/NovaCDN$ docker ps --filter "name=novacdn_frontend" --format "{{.Names}}"
novacdn_frontend_8
novacdn_frontend_1
novacdn_frontend_3
novacdn_frontend_4
novacdn_frontend_6
novacdn_frontend_7
novacdn_frontend_10
novacdn_frontend_9
novacdn_frontend_2
novacdn_frontend_5

# docker ps --filter "name=novacdn_backend" --format "{{.Names}}" - List backend containers

dannyrosky@Samson:/mnt/c/Users/Administrator/Desktop/NovaCDN$ docker ps --filter "name=novacdn_backend" --format "{{.Names}}"
novacdn_backend_9
novacdn_backend_4
novacdn_backend_5
novacdn_backend_7
novacdn_backend_1
novacdn_backend_6
novacdn_backend_3
novacdn_backend_2
novacdn_backend_8
novacdn_backend_10

# Confirm only one of each is running 

dannyrosky@Samson:/mnt/c/Users/Administrator/Desktop/NovaCDN$ docker ps
CONTAINER ID   IMAGE              COMMAND                  CREATED          STATUS          PORTS                                     NAMES
6c326a1f9c23   nginx:latest       "/docker-entrypoint.â€¦"   10 minutes ago   Up 10 minutes   0.0.0.0:8080->80/tcp, [::]:8080->80/tcp   nginx
45cf7184c1ec   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_8
fdde592fb559   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_1
ad7c2d7612fd   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_3
598564ac0dcf   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_4
0f3c268b921b   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_6
eb11bc532cb1   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_7
7cc66d229d31   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_10
55dfda98e3c9   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_9
8deed4900892   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_2
0ab87ad51531   novacdn_frontend   "/docker-entrypoint.â€¦"   11 minutes ago   Up 10 minutes   80/tcp                                    novacdn_frontend_5
807aa7a295b7   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_9
995f058a1e86   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_4
bbab72d9c0c5   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_5
3dd28dfe9880   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_7
1a75cdce1ba1   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_1
6a4395ff23e7   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_6
8fbcb27baef8   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_3
c51cac1f310f   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_2
1293b95dd43f   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_8
65eae20fd623   novacdn_backend    "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   3000/tcp                                  novacdn_backend_10
8a8cb58e3ee4   redis:latest       "docker-entrypoint.sâ€¦"   11 minutes ago   Up 11 minutes   6379/tcp                                  redis


- Stop 9 frontend containers (keep only one, e.g., _1
docker stop novacdn_frontend_2 novacdn_frontend_3 novacdn_frontend_4 novacdn_frontend_5 novacdn_frontend_6 novacdn_frontend_7 novacdn_frontend_8 novacdn_frontend_9 novacdn_frontend_10

- Stop 9 backend containers (keep only one, e.g., _1)
docker stop novacdn_backend_2 novacdn_backend_3 novacdn_backend_4 novacdn_backend_5 novacdn_backend_6 novacdn_backend_7 novacdn_backend_8 novacdn_backend_9 novacdn_backend_10


Output after stopping 9 frontend nodes and 9 backend nodes for testing 

dannyrosky@Samson:/mnt/c/Users/Administrator/Desktop/NovaCDN$ docker ps
CONTAINER ID   IMAGE              COMMAND                  CREATED          STATUS          PORTS                                     NAMES
6c326a1f9c23   nginx:latest       "/docker-entrypoint.â€¦"   14 minutes ago   Up 14 minutes   0.0.0.0:8080->80/tcp, [::]:8080->80/tcp   nginx
fdde592fb559   novacdn_frontend   "/docker-entrypoint.â€¦"   15 minutes ago   Up 14 minutes   80/tcp                                    novacdn_frontend_1
1a75cdce1ba1   novacdn_backend    "docker-entrypoint.sâ€¦"   15 minutes ago   Up 15 minutes   3000/tcp                                  novacdn_backend_1
8a8cb58e3ee4   redis:latest       "docker-entrypoint.sâ€¦"   16 minutes ago   Up 15 minutes   6379/tcp                                  redis

Check it out in http://localhost:8080

Nginx is routing traffic to the only available frontend container.

The frontend is connecting to the backend and Redis internally via Dockerâ€™s network.

COMMAND TO BRING UP 3 nodes each
docker-compose up -d --scale frontend=3 --scale backend=3 

COMMAND TO BRING UP 10 nodes each
docker-compose up -d --scale frontend=10 --scale backend=10


 General Docker Commands
Command	                    Description
docker ps	                    Show running containers
docker ps -a	                    Show all containers (including stopped)
docker stop <container>     	Stop a running container
docker start <container>	Start a stopped container
docker restart <container>	Restart a container
docker rm <container>	Remove a stopped container
docker images	                    List all local Docker images
docker rmi <image>	                    Remove a Docker image
docker logs <container>	Show logs from a container
docker exec -it <container> bash	Open a bash shell inside the container
docker stats	                    Live CPU/memory usage of containers
docker inspect <container>	Get low-level info about container
docker network ls	                    List Docker networks
docker volume ls	                    List Docker volumes


ðŸ§± Building & Running Images
Command	                     Description
docker build -t <name> .	Build an image from a Dockerfile
docker run -d -p 8080:80 <image>	Run a container in detached mode, mapping ports
docker run --rm -it <image> bash	Run a container and open a shell; remove after exit


ðŸ§° Docker Compose Commands
Command	                                          Description
docker-compose up -d	                     Start all services defined in docker-compose.yml in detached mode
docker-compose up -d --build                                 Build images and start containers
docker-compose down	                                         Stop and remove containers, networks, volumes defined by the compose file
docker-compose ps	                                         Show running services
docker-compose logs -f	                     Stream logs from all services
docker-compose exec <service> bash	                    Access a service container shell
docker-compose scale frontend=3 backend=2	(Deprecated in newer versions) Scale containers manually
docker-compose up -d --scale frontend=3 --scale backend=3	âœ… Scale specific services with newer syntax


ðŸ§ª Bonus: Useful During Testing
Command	                                   Description
docker stop $(docker ps -q)	              Stop all running containers
docker rm $(docker ps -aq)	              Remove all containers
docker rmi $(docker images -q)	              Remove all images
docker volume prune	Remove all unused volumes
docker system prune -a	               Remove all unused data (images, containers, networks)